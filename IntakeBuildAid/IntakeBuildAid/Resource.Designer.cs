//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntakeBuildAid {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IntakeBuildAid.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Mobile Xray Shader created by Bruno Rime 2012
        ///// Free for personal and comercial use
        ///
        ///Shader &quot;Mobile/Mobile-XrayEffect&quot; {
        ///	Properties {
        ///		_Color(&quot;_Color&quot;, Color) = (0,1,0,1)
        ///	    _Inside(&quot;_Inside&quot;, Range(0,1) ) = 0
        ///	    _Rim(&quot;_Rim&quot;, Range(0,2) ) = 1.2
        ///	}
        ///	SubShader {
        ///		Tags { &quot;Queue&quot; = &quot;Transparent&quot; }
        ///		LOD 80
        ///		
        ///	Pass {
        ///		Name &quot;Darken&quot;
        ///		Cull off
        ///		Zwrite off
        ///		Blend dstcolor zero
        ///		Ztest always
        ///				
        ///		Program &quot;vp&quot; {
        ///// Vertex combos: 1
        /////   opengl - ALU: 19 to 19
        /////   d3d9 - ALU: 21 to 21
        /////   d3d11 -  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OutlineShaderContents {
            get {
                return ResourceManager.GetString("OutlineShaderContents", resourceCulture);
            }
        }
    }
}
